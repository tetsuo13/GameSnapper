<?php
/**
 * Game play page.
 *
 * @copyright 2010-2011 GameSnapper
 * @since     2010-11-28
 * @author    Andrei Nicholson
 */

require_once '../lib/globals.php';
require_once LIB_DIR . 'lib.htmlTemplate.php';
require_once LIB_DIR . 'lib.db.php';

$template = new htmlTemplate(TEMPLATE_DIR . 'play.html');

if (!isset($_GET['id'], $_GET['title'])) {
    // Do something.
}

$result = getGame($_GET['id'], $_GET['title']);

if (is_array($result) && count($result) == 2) {
    list($game, $category) = $result;

    $template->set('flash_path', '/games/' . $game['filepath'] . '/' . $game['slug'] . '.swf');
    list($width, $height) = scaleFlash(750, $game['width'], $game['height']);
    $template->set('flash_width', $width);
    $template->set('flash_height', $height);
    $template->set('title', $game['title']);
    $template->set('description', $game['description']);
    $template->set('instructions', $game['instructions']);
    $template->set('added', date('n/j/Y', strtotime($game['added'])));
    $template->set('played', number_format($game['played']));
    $template->set('categories', $category);

    updatePlayCounter($game['id']);
}

$template->set('result', $result);

try {
    echo $template->execute();
} catch (Exception $e) {
    echo '<pre>', $e->getMessage(), '</pre>';
}

/**
 * @param int $maxWidth
 * @param int $width
 * @param int $height
 *
 * @return array
 */
function scaleFlash($maxWidth, $width, $height) {
    if ($width <= $maxWidth) {
        return array($width, $height);
    }

    $ratio = $maxWidth / $width;
    $widthDiff = $ratio * $width;
    $heightDiff = $ratio * $height;

    return array($widthDiff, $heightDiff);
}

/**
 * @param int $gameId
 */
function updatePlayCounter($gameId) {
    try {
        $sql = 'UPDATE game
                SET    played = played + 1
                WHERE  id = :game_id';

        $db = new db(db::DEFAULT_DSN, db::WRITE_ACCESS);
        $statement = $db->prepare($sql);

        $statement->bindParam(':game_id', $gameId, PDO::PARAM_INT);

        $statement->execute();
    } catch (Exception $e) {
    }
}

/**
 * @param string $filepath
 * @param string $slug
 *
 * @return array
 */
function getGame($filepath, $slug) {
    try {
        $sql = 'SELECT title, filepath, thumbtype, description, instructions,
                       slug, width, height, id, played, added
                FROM   game
                WHERE  slug = :slug AND
                       filepath = :filepath';

        $db = new db(db::DEFAULT_DSN, db::READ_ONLY_ACCESS);
        $statement = $db->prepare($sql);

        $statement->bindParam(':slug', $slug, PDO::PARAM_STR, 128);
        $statement->bindParam(':filepath', $filepath, PDO::PARAM_STR, 16);

        $statement->execute();
        $game = $statement->fetch(PDO::FETCH_ASSOC);

        $sql = 'SELECT   id, title
                FROM     category
                WHERE    id IN (SELECT category_id
                                FROM   category_game_xref
                                WHERE  game_id = :game_id)
                ORDER BY title';

        $statement = $db->prepare($sql);

        $statement->bindParam(':game_id', $game['id'], PDO::PARAM_INT);

        $statement->execute();
        $category = $statement->fetchAll(PDO::FETCH_CLASS);

        return array($game, $category);
    } catch (Exception $e) {
        return NULL;
    }
}

/** vim: set filetype=php: */
